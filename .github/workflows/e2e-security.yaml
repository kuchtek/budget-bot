---
name: Continuous Security Checks

on:
  workflow_dispatch:
  schedule:
    - cron: '0 1 * * *' # scan every day at 01:00 AM UTC.

jobs:
  sast:
    name: Validate code
    uses: kuchtek/course-actions/.github/workflows/sast-validation-semgrep.yaml@main
    with:
      rules: "p/python"
      upload-artifact: true
      upload-release-assets: false
      upload-results-github-security: false

  sca:
    name: Validate python dependencies
    uses: kuchtek/course-actions/.github/workflows/sca-validation-trivy.yaml@master
    with:
      exit-code: 1 # fail the job if issues are found
      severity: HIGH,CRITICAL
      ignore-unfixed: true
      format: table
      upload-artifact: true
      upload-release-assets: false
      upload-results-github-security: false

  get-version:
    name: Get latest release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Get latest git tag
        id: get-version
        run: |
          tag=$(git ls-remote --refs --sort="version:refname" --tags $repo | cut -d/ -f3-|tail -n1)
          version=${tag:1}
          echo "release_version=$version" >> $GITHUB_OUTPUT;
    outputs:
      release_version: ${{ steps.get-version.outputs.release_version }}

  scan-image:
    name: Scan Image
    permissions:
      packages: read
      contents: write
    needs: [get-version]
    uses: kuchtek/course-actions/.github/workflows/image-scan-trivy.yaml@master
    secrets:
      registry-username: ${{ github.actor }}
      registry-password: ${{ secrets.GITHUB_TOKEN }}
    with:
      image: 'ghcr.io/${{ github.repository }}:${{ needs.get-version.outputs.release_version }}'
      exit-code: 1 # fail the job if issues are found
      format: table
      severity: HIGH,CRITICAL
      ignore-unfixed: true
      upload-artifact: true
      upload-release-assets: false
      upload-results-github-security: false

  scan-sbom:
    name: Generate & Scan SBOM
    needs: [get-version]
    permissions:
      packages: read
      contents: write
    uses: kuchtek/course-actions/.github/workflows/sbom-scan-grype.yaml@master
    secrets:
      registry-username: ${{ github.actor }}
      registry-password: ${{ secrets.GITHUB_TOKEN }}
    with:
      image: 'ghcr.io/${{ github.repository }}:${{ needs.get-version.outputs.release_version }}'
      scan-sbom: true
      severity: 'high' # minimum vulnerability severity to trigger a failure
      upload-artifact: true
      upload-release-assets: false

  notification:
    name: Notification
    runs-on: ubuntu-latest
    needs: [sast, sca, iac, scan-image, scan-sbom]
    if: always() && contains(join(needs.*.result, ','), 'fail')
    steps:
      - name: send telegram message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_NOTOKEN }}
          message: |
            Repository: ${{ github.repository }}
            Security scanning completed; Please find results.
