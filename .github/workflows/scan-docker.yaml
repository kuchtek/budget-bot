---
name: Docker Image Validation

on:
  pull_request:
    paths:
      - 'Dockerfile'
      - '*.py'
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true


permissions:
  contents: write

  packages: write  # required to publish to packages
  pull-requests: write
  security-events: write

jobs:
  build-image:
    name: Build Image
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      REPOSITORY: ${{ github.repository }}
    outputs:
      image-tag: ${{ steps.image-tag.outputs.image-tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup python environment
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.1.0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3.4.0


      # - name: Log in to the Container registry
      #   uses: docker/login-action@v2
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.repository_owner }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Extract metadata (tags, labels) for Docker
      #   id: meta
      #   uses: docker/metadata-action@v4
      #   if: |
      #     success()
      #   with:
      #     images: ${{ github.repository }}
      #     tags: |
      #       type=raw,value=gha-${{ github.run_id }},enable=${{github.event_name == 'pull_request'}},priority=200
      #       type=ref,event=pr,priority=100

      - name: Build and push Docker image to local registry
        uses: docker/build-push-action@v4
        if: |
          success()
        with:
          # use github cache API for faster builds:
          # https://github.com/docker/build-push-action/blob/master/docs/advanced/cache.md#cache-backend-api
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: "${{ github.repository }}:${{ github.sha }}"
          outputs: type=docker,dest=/tmp/image.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker_image
          path: /tmp/image.tar

      # - name: Find comment for image tags
      #   uses: peter-evans/find-comment@v2.4.0
      #   id: image-comment
      #   with:
      #     issue-number: ${{ github.event.pull_request.number }}
      #     comment-author: 'github-actions[bot]'
      #     body-includes: Docker image tag(s) pushed

      # - name: Create or update comment for image tags
      #   uses: peter-evans/create-or-update-comment@v3.0.2
      #   with:
      #     comment-id: ${{ steps.image-comment.outputs.comment-id }}
      #     issue-number: ${{ github.event.pull_request.number }}
      #     body: |
      #       Docker image tag(s) pushed:
      #       ```text
      #       ${{ steps.meta.outputs.tags }}
      #       ```

      #       Labels added to images:
      #       ```text
      #       ${{ steps.meta.outputs.labels }}
      #       ```
      #     edit-mode: replace

      # - name: Find the primary image tag we just pushed, and output it
      #   id: image-tag
      #   if: |
      #     success()
      #   run: |
      #     # shellcheck disable=SC2086
      #     echo "image-tag=${{ steps.meta.outputs.version }}" >> $GITHUB_OUTPUT
  scan-image:
    name: Scan Image
    needs: [build-image]
    uses: ./.github/workflows/image-scan-trivy.yaml
    with:
      download_artifact: true
      format: sarif
      image: "${{ github.repository }}:${{ github.sha}}"
      exit-code: 1 # fail the job if issues are found
      severity: HIGH,CRITICAL
      ignore-unfixed: true
      upload-artifact: true
      upload-release-assets: false
      upload-results-github-security: true
    secrets: inherit
